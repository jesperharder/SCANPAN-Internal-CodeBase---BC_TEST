#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.7.2.0.2471")
    {
        type(ForNav.Report_7_2_0_2471; ForNavReport50012_v7_2_0_2471) { }
    }
    assembly("mscorlib")
    {
        Version = '4.0.0.0';
        type("System.IO.Stream"; SystemIOStream50012) { }
        type("System.IO.Path"; System_IO_Path50012) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->




/// <summary>
/// Report DebitorAddress (ID 50012).
/// </summary>
Report 50012 "DebitorAddress"
{
    RDLCLayout = '.\src\report\layout\DebitorAddress.rdlc';
    DefaultLayout = RDLC;

    Caption = 'DebitorAddress';
    AdditionalSearchTerms = 'Scanpan';

    dataset
    {
        dataitem(Customer; Customer)
        {
            RequestFilterFields = Blocked, "Country/Region Code", "Salesperson Code";
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            dataitem(CDOE_MailRecipient; "CDO E-Mail Recipient")
            {
                RequestFilterFields = "Document Code";
                DataItemLink = "No." = field("No.");
#pragma warning disable AL0603
                DataItemTableView = where(Table = CONST(0));
#pragma warning restore AL0603
                column(ReportForNavId_2; 2) { } // Autogenerated by ForNav - Do not delete
            }
        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50012_v7_2_0_2471;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path50012;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_2_0_2471\ForNav.Reports.7.2.0.2471.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.2.0.2471.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.2.0.2471 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
