#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings
dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
{
    assembly("ForNav.Reports.7.0.0.2350")
    {
        type(ForNav.Report_7_0_0_2350; ForNavReport50007_v7_0_0_2350) { }
    }
} // Reports ForNAV Autogenerated code - do not delete or modify -->

/// <summary>
/// Report Licenseplate 50007 (ID 50007).
/// </summary>
Report 50007 "Licenseplate"
{
    RDLCLayout = './src/report/layout/Licenseplate50007.rdlc';
    DefaultLayout = RDLC;

    Caption = 'Licenseplate';
    AdditionalSearchTerms = 'Scanpan';

    dataset
    {
        dataitem(Integer; Integer)
        {
            MaxIteration = 100;
            DataItemTableView = sorting(Number);
            column(ReportForNavId_1; 1) { } // Autogenerated by ForNav - Do not delete
            column(LabelID; LabelID)
            {
                IncludeCaption = false;
            }
            column(Counter; Counter)
            {
                IncludeCaption = false;
            }
            column(AntalLabels; AntalLabels)
            {
                IncludeCaption = false;
            }
            trigger OnPreDataItem();
            begin
                Integer.SetRange(Number, 1, AntalLabels);
                if AntalLabels = 0 then Error('Du skal vælge et antal labels til udskrift');
                if AntalLabels > 100 then Error('Du kan ikke vælge mere end 100 antal labels');
            end;

            trigger OnAfterGetRecord();
            begin
                if LabelID = '' then begin
                    CounterValidate := NoSeriesMgt.GetNextNo('L-LICENCEPLTE', WorkDate(), TRUE);
                    IF StrLen(CounterValidate) > 10 then Error('Stergkodelængde kan maks. være 10 tegn. Juster Nummerserie.');
                    Counter := CounterValidate
                end
                else begin
                    CounterValidate := LabelID;
                    IF StrLen(CounterValidate) > 10 then Error('Stergkodelængde kan maks. være 10 tegn.');
                    Counter := CounterValidate;

                end;


            end;

        }
    }

    requestpage
    {

        SaveValues = false;
        layout
        {
            area(content)
            {
                group(scanpan)
                {
                    Caption = 'Scanpan';
                    field(AntalLabels; AntalLabels)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Antal plukkelabels til udskrift';
                        ToolTip = 'Vælg hvor mange plukkelabels der skal udskrives. Maks. 100 stk. pr. udskrift.';
                    }
                    field(LabelID; LabelID)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Manuel kode';
                        ToolTip = 'Her kan der angives en bestemt kode til udskrift. Det er samme kode, der skrive på alle antal labels der bestilles.';

                    }
                }
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                        trigger OnValidate()
                        begin
                            ReportForNav.LaunchDesigner(ReportForNavOpenDesigner);
                            CurrReport.RequestOptionsPage.Close();
                        end;

                    }
                }
            }
        }

        actions
        {
        }
        trigger OnOpenPage()
        begin
            ReportForNavOpenDesigner := false;
        end;

    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

        //SCANPAN

    end;

    trigger OnPostReport()
    begin
        ;
        ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;

    end;

    var
        AntalLabels: Integer;
        LabelID: Text[10];
        Counter: Text[10];
        CounterValidate: Text[30];
        //RECORDS
        NoSeriesLine: Record "No. Series Line";
        //CODEUNIT
        NoSeriesMgt: Codeunit NoSeriesManagement;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        [WithEvents]
        ReportForNav: DotNet ForNavReport50007_v7_0_0_2350;
        ReportForNavOpenDesigner: Boolean;
        [InDataSet]
        ReportForNavAllowDesign: Boolean;

    local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet Path;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_0_0_2350\ForNav.Reports.7.0.0.2350.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.0.0.2350.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.0.0.2350 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        ReportForNav.Init();
    end;

    local procedure ReportsForNavPre();
    begin
        ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
        if not ReportForNav.Pre() then CurrReport.Quit();
    end;

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
